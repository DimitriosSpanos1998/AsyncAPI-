import type { AsyncAPIDocument, OpenAPIDocument } from "./interfaces";
export declare function serializeInput(document: string | AsyncAPIDocument | OpenAPIDocument | Record<string, any>): {
    format: 'json' | 'yaml';
    document: AsyncAPIDocument | OpenAPIDocument;
} | never;
export declare function objectToSchema(obj: Record<string, unknown>): {
    type: string;
    properties: {
        [x: string]: unknown;
    };
};
export declare function dotsToSlashes(topic: string): string;
export declare function isPlainObject(value: unknown): boolean;
export declare function createRefObject(...paths: Array<string | number>): {
    $ref: string;
};
export declare function createRefPath(...paths: Array<string | number>): string;
export declare function isRefObject(value: unknown): boolean;
export declare function isRemoteRef(value: any): boolean;
export declare function getValueByRef(root: any, ref: string): any;
export declare function getValueByPath(value: any, path: string[]): any;
export declare function sortObjectKeys(obj: any, keys: string[]): any;
export declare function removeEmptyObjects(obj: Record<string, any>): Record<string, any>;
